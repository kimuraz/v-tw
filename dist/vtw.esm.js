function t(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,n){if(!t)return;if("string"==typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return r(t,n)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}var n={},e={install:function(r,e){r.VTWInstalled||(r.VTWInstalled=!0,r.directive("tw",function(r){return{bind:function(n,e){var o,a=n.tagName.toLowerCase(),i=e.arg,s=e.modifiers;if(r[a]||r[i]){var c=i?r[i]:r[a];(o=n.classList).add.apply(o,t(c.classes.split(" "))),s&&Object.keys(s).forEach((function(r){var e;(null==c?void 0:c.modifiers[r])?(e=n.classList).add.apply(e,t(c.modifiers[r].split(" "))):console.warn("No modifier ".concat(r," found for ").concat(i||a," elements"))}))}else console.warn("No options found for ".concat(i||a," elements"))}}}(e.tw||n.tw)))}};export default e;
